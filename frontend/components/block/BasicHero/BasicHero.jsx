import React, { useState, useRef, useEffect } from 'react';
import styles from './BasicHero.module.scss';
import reactStringReplace from 'react-string-replace';
import RichText from '../../util/RichText/RichText';
import { Tween } from "react-gsap";
import { ScrollTrigger } from "gsap/dist/ScrollTrigger";
import { gsap } from "gsap";
gsap.registerPlugin(ScrollTrigger);
// Change Image source to '../../util/Img/Img' + imageObject when integrated into backend
import Image from "../../../imageloader";
import ScrollAnim from '../../util/ScrollAnim/ScrollAnim';

function DecorO () {
  return (
    <div className={styles.decorOWrapper}>
      <svg width="108" height="108" viewBox="0 0 108 108" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M19.8574 44.0579C23.6817 30.9263 34.8775 20.9319 48.6674 18.8738C50.3904 18.6167 52.1538 18.4834 53.9485 18.4834C55.5605 18.4834 57.1466 18.5912 58.7002 18.7999C59.434 18.8985 60.1604 19.0195 60.879 19.1624C67.6166 20.5017 73.657 23.7555 78.4348 28.3237C78.4348 28.3236 78.4348 28.3237 78.4348 28.3237L78.6574 28.1011L78.6576 28.1008L87.5773 11.7797C78.3632 4.41395 66.6662 1.95922e-06 53.9485 0C29.3941 -2.20412e-06 8.67369 16.3834 2.12012 38.8174L19.8574 44.0579Z" fill="#5BBDEB"/>
        <path d="M63.7734 88.0388C65.1695 87.6411 66.5303 87.1601 67.8502 86.6017C70.8491 85.3331 73.637 83.6644 76.1474 81.6629C76.4173 81.4477 76.684 81.2286 76.9474 81.0058C79.5165 78.8327 81.7725 76.3014 83.6386 73.4892C87.371 67.8647 89.5441 61.1167 89.5441 53.8631C89.5441 44.6489 85.9853 36.29 80.2472 29.9725L96.7444 20.8964V20.8688C103.807 29.9725 108 41.4212 108 53.8354C108 78.4576 91.5261 99.2246 68.9968 105.718L63.7734 88.0388Z" fill="#234C5F"/>
        <path d="M18.5107 52.5386C18.6259 49.582 19.1023 46.7177 19.897 43.989L2.15972 38.7484C0.877052 43.1392 0.137069 47.7618 0.0172304 52.5386C0.00572092 52.9974 0 53.4576 0 53.9191C-1.27349e-05 83.7409 24.1664 107.907 53.9881 107.907C54.2597 107.907 54.5308 107.905 54.8014 107.901C60.3227 107.82 65.6429 106.91 70.6433 105.29C70.0903 105.47 69.5335 105.64 68.9729 105.801L63.7495 88.1226C60.8976 88.9351 57.8988 89.4005 54.8014 89.47C54.531 89.4761 54.26 89.479 53.9881 89.479C34.3461 89.479 18.4834 73.5612 18.4834 53.9467C18.4834 53.4751 18.4925 53.0058 18.5107 52.5386Z" fill="#E55136"/>
        <path d="M78.5408 28.3182C78.5187 28.297 78.4966 28.2758 78.4745 28.2547L78.6972 28.032L78.5408 28.3182Z" fill="#E55136"/>
      </svg>
    </div>
  )
}

function ChronosLogo () {
  return (
    <svg width="282" height="64" viewBox="0 0 282 64" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M87.2316 44.0821C86.6859 44.3387 85.4821 44.7398 83.9413 44.7398C80.4745 44.7398 78.2275 42.3977 78.2275 38.8846C78.2275 35.3715 80.6511 32.7727 84.3907 32.7727C85.6266 32.7727 86.718 33.0775 87.2797 33.3823L86.7982 34.9704C86.3007 34.7137 85.5142 34.425 84.3747 34.425C81.7425 34.425 80.3301 36.3981 80.3301 38.7562C80.3301 41.4031 82.0314 43.0394 84.3105 43.0394C85.4982 43.0394 86.2846 42.7506 86.8624 42.494L87.2155 44.05L87.2316 44.0821Z" fill="white"/>
      <path d="M90.5859 27.6875H92.6724V34.8421H92.7206C93.0576 34.2485 93.5712 33.7031 94.2132 33.3663C94.8231 32.9813 95.5614 32.7727 96.3479 32.7727C97.8887 32.7727 100.36 33.7192 100.36 37.6815V44.4992H98.2739V37.89C98.2739 36.0452 97.5837 34.5052 95.6256 34.5052C94.2774 34.5052 93.2342 35.4517 92.8329 36.5906C92.7206 36.8794 92.6885 37.1842 92.6885 37.5852V44.4992H90.602V27.6875H90.5859Z" fill="white"/>
      <path d="M104.566 36.6227C104.566 35.2752 104.55 34.1042 104.47 33.0454H106.299L106.396 35.2912H106.46C106.974 33.7512 108.258 32.7727 109.654 32.7727C109.863 32.7727 110.039 32.7887 110.216 32.8208V34.794C110.007 34.7619 109.782 34.7458 109.509 34.7458C108.033 34.7458 107.006 35.8527 106.717 37.3927C106.669 37.6975 106.653 38.0344 106.653 38.3712V44.4992H104.566V36.6067V36.6227Z" fill="white"/>
      <path d="M117.935 44.7719C114.853 44.7719 112.43 42.494 112.43 38.8686C112.43 35.0346 114.966 32.7888 118.111 32.7888C121.257 32.7888 123.633 35.179 123.633 38.6601C123.633 42.9272 120.663 44.7719 117.951 44.7719H117.935V44.7719ZM118.031 43.2159C120.021 43.2159 121.514 41.339 121.514 38.7403C121.514 36.7992 120.535 34.3609 118.079 34.3609C115.624 34.3609 114.564 36.6388 114.564 38.8205C114.564 41.339 115.993 43.2319 117.999 43.2319H118.015L118.031 43.2159Z" fill="white"/>
      <path d="M127.131 36.1415C127.131 34.9384 127.115 33.9919 127.035 33.0455H128.881L128.993 34.9224H129.041C129.603 33.8636 130.935 32.7888 132.829 32.7888C134.418 32.7888 136.874 33.7353 136.874 37.6655V44.5153H134.787V37.9061C134.787 36.0613 134.097 34.4892 132.139 34.4892C130.791 34.4892 129.716 35.4678 129.346 36.6228C129.25 36.8794 129.202 37.2644 129.202 37.6013V44.5153H127.115V36.1576L127.131 36.1415Z" fill="white"/>
      <path d="M145.91 44.7719C142.829 44.7719 140.405 42.494 140.405 38.8686C140.405 35.0346 142.941 32.7888 146.087 32.7888C149.233 32.7888 151.608 35.179 151.608 38.6601C151.608 42.9272 148.639 44.7719 145.926 44.7719H145.91V44.7719ZM146.007 43.2159C147.997 43.2159 149.49 41.339 149.49 38.7403C149.49 36.7992 148.511 34.3609 146.055 34.3609C143.599 34.3609 142.54 36.6388 142.54 38.8205C142.54 41.339 143.968 43.2319 145.975 43.2319H145.991L146.007 43.2159Z" fill="white"/>
      <path d="M154.786 42.3656C155.428 42.7506 156.52 43.1677 157.563 43.1677C159.055 43.1677 159.762 42.4298 159.762 41.4673C159.762 40.5048 159.168 39.9594 157.659 39.3819C155.573 38.6279 154.61 37.489 154.61 36.1415C154.61 34.2967 156.118 32.7727 158.574 32.7727C159.73 32.7727 160.757 33.0775 161.367 33.4785L160.869 34.9704C160.42 34.7137 159.585 34.3127 158.526 34.3127C157.29 34.3127 156.632 35.0185 156.632 35.8687C156.632 36.8152 157.29 37.2483 158.783 37.8419C160.757 38.5798 161.8 39.5744 161.8 41.2748C161.8 43.3121 160.211 44.7398 157.531 44.7398C156.279 44.7398 155.107 44.4029 154.305 43.9377L154.802 42.3817L154.786 42.3656Z" fill="white"/>
      <path d="M166.358 44.772C165.555 44.772 164.978 44.1303 164.978 43.2801C164.978 42.4299 165.571 41.7882 166.406 41.7882C167.241 41.7882 167.802 42.3978 167.802 43.2801C167.802 44.1624 167.241 44.772 166.374 44.772H166.358Z" fill="#898A8D"/>
      <path d="M172.506 31.1044C171.751 31.1044 171.254 30.5109 171.254 29.8211C171.254 29.0832 171.768 28.5217 172.554 28.5217C173.34 28.5217 173.838 29.0832 173.838 29.8211C173.838 30.5109 173.34 31.1044 172.538 31.1044H172.522H172.506ZM171.511 44.5153V33.0455H173.597V44.5153H171.511V44.5153Z" fill="#898A8D"/>
      <path d="M177.899 36.1415C177.899 34.9384 177.883 33.9919 177.803 33.0455H179.648L179.761 34.9224H179.809C180.371 33.8636 181.703 32.7888 183.597 32.7888C185.186 32.7888 187.641 33.7353 187.641 37.6655V44.5153H185.555V37.9061C185.555 36.0613 184.865 34.4892 182.907 34.4892C181.558 34.4892 180.483 35.4678 180.114 36.6228C180.018 36.8794 179.969 37.2644 179.969 37.6013V44.5153H177.883V36.1576L177.899 36.1415Z" fill="#898A8D"/>
      <path d="M194.286 30.2864V33.0295H197.271V34.6176H194.286V40.7776C194.286 42.2053 194.687 43.0074 195.843 43.0074C196.404 43.0074 196.741 42.9593 197.046 42.863L197.143 44.4512C196.741 44.5955 196.099 44.7399 195.297 44.7399C194.318 44.7399 193.547 44.403 193.05 43.8576C192.488 43.216 192.247 42.2053 192.247 40.8578V34.6337H190.466V33.0455H192.247V30.9441L194.286 30.3024V30.2864Z" fill="#898A8D"/>
      <path d="M201.508 39.1574C201.556 41.9487 203.337 43.1197 205.424 43.1197C206.917 43.1197 207.848 42.8631 208.602 42.5262L208.987 44.0181C208.249 44.3549 206.965 44.756 205.151 44.756C201.652 44.756 199.518 42.4139 199.518 38.981C199.518 35.5481 201.572 32.8049 204.926 32.8049C208.666 32.8049 209.645 36.0935 209.645 38.211C209.645 38.6441 209.629 38.9489 209.581 39.1895H201.54L201.508 39.1574ZM207.591 37.6656C207.623 36.3341 207.045 34.2808 204.718 34.2808C202.583 34.2808 201.684 36.2218 201.524 37.6656H207.591Z" fill="#898A8D"/>
      <path d="M213.032 36.6227C213.032 35.2752 213.016 34.1042 212.936 33.0454H214.765L214.862 35.2912H214.926C215.439 33.7512 216.723 32.7727 218.12 32.7727C218.328 32.7727 218.505 32.7887 218.681 32.8208V34.794C218.473 34.7619 218.248 34.7458 217.975 34.7458C216.499 34.7458 215.455 35.8527 215.183 37.3927C215.134 37.6975 215.118 38.0344 215.118 38.3712V44.4992H213.032V36.6067V36.6227Z" fill="#898A8D"/>
      <path d="M229.981 41.756C229.981 42.7506 230.029 43.7292 230.142 44.4992H228.264L228.071 43.0554H228.007C227.397 43.9537 226.129 44.7558 224.508 44.7558C222.181 44.7558 220.993 43.1196 220.993 41.4673C220.993 38.6921 223.465 37.1842 227.895 37.2002V36.9596C227.895 36.0131 227.638 34.2806 225.295 34.3127C224.203 34.3127 223.096 34.6175 222.293 35.1629L221.812 33.7673C222.759 33.1737 224.155 32.7727 225.6 32.7727C229.131 32.7727 229.981 35.1629 229.981 37.4569V41.74V41.756ZM227.943 38.66C225.664 38.6119 223.08 39.0129 223.08 41.2427C223.08 42.6223 223.978 43.2319 225.022 43.2319C226.53 43.2319 227.509 42.2854 227.846 41.3069C227.911 41.0983 227.943 40.8577 227.943 40.6492V38.66Z" fill="#898A8D"/>
      <path d="M241.713 44.0821C241.167 44.3387 239.964 44.7398 238.423 44.7398C234.956 44.7398 232.709 42.3977 232.709 38.8846C232.709 35.3715 235.133 32.7727 238.872 32.7727C240.108 32.7727 241.199 33.0775 241.761 33.3823L241.296 34.9704C240.798 34.7137 240.012 34.425 238.872 34.425C236.24 34.425 234.828 36.3981 234.828 38.7562C234.828 41.4031 236.529 43.0394 238.808 43.0394C239.996 43.0394 240.782 42.7506 241.36 42.494L241.713 44.05V44.0821Z" fill="#898A8D"/>
      <path d="M248.005 30.2864V33.0295H250.991V34.6176H248.005V40.7776C248.005 42.2053 248.407 43.0074 249.562 43.0074C250.124 43.0074 250.461 42.9593 250.766 42.863L250.862 44.4512C250.461 44.5955 249.819 44.7399 249.017 44.7399C248.038 44.7399 247.267 44.403 246.77 43.8576C246.208 43.216 245.967 42.2053 245.967 40.8578V34.6337H244.186V33.0455H245.967V30.9441L248.005 30.3024V30.2864Z" fill="#898A8D"/>
      <path d="M255.163 31.1044C254.409 31.1044 253.911 30.5109 253.911 29.8211C253.911 29.0832 254.425 28.5217 255.211 28.5217C255.998 28.5217 256.495 29.0832 256.495 29.8211C256.495 30.5109 255.998 31.1044 255.195 31.1044H255.179H255.163ZM254.168 44.5153V33.0455H256.254V44.5153H254.168V44.5153Z" fill="#898A8D"/>
      <path d="M261.471 33.0454L263.718 39.4621C264.103 40.5208 264.408 41.4833 264.649 42.4298H264.713C264.97 41.4833 265.307 40.5369 265.692 39.4621L267.923 33.0454H270.106L265.596 44.5152H263.606L259.24 33.0454H261.471V33.0454Z" fill="#898A8D"/>
      <path d="M273.444 39.1574C273.492 41.9487 275.274 43.1197 277.361 43.1197C278.853 43.1197 279.784 42.8631 280.538 42.5262L280.924 44.0181C280.185 44.3549 278.901 44.756 277.088 44.756C273.589 44.756 271.454 42.4139 271.454 38.981C271.454 35.5481 273.509 32.8049 276.863 32.8049C280.603 32.8049 281.582 36.0935 281.582 38.211C281.582 38.6441 281.566 38.9489 281.517 39.1895H273.476L273.444 39.1574ZM279.527 37.6656C279.559 36.3341 278.982 34.2808 276.654 34.2808C274.52 34.2808 273.621 36.2218 273.46 37.6656H279.527Z" fill="#898A8D"/>
      <path d="M56.2713 12.8169L46.6734 18.0946C50.0118 21.7682 52.0823 26.6288 52.0823 31.9867C52.0823 43.3924 42.8374 52.6484 31.4098 52.6484C19.9822 52.6484 10.7535 43.3924 10.7535 31.9867C10.7535 20.5811 19.9983 11.3251 31.4098 11.3251C36.9632 11.3251 41.9868 13.5228 45.6944 17.084L50.9748 7.42694C45.6141 3.14382 38.8089 0.577148 31.4098 0.577148C14.0598 0.577148 0 14.6296 0 31.9707C0 49.3117 14.0598 63.3642 31.4098 63.3642C48.7599 63.3642 62.8197 49.3117 62.8197 31.9707C62.8197 24.7519 60.3801 18.0946 56.2713 12.8009V12.8169Z" fill="#EF5033"/>
    </svg>
  )
}

function BigO () {
  return(
      <svg width="540" height="540" viewBox="0 0 540 540" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M270 443.381C365.599 443.381 443.381 365.599 443.381 270L540 270C540 418.878 418.878 540 270 540L270 443.381Z" fill="#3F687B"/>
        <path d="M96.6187 270C96.6187 365.599 174.401 443.381 270 443.381L270 540C121.122 540 -9.5906e-07 418.878 -2.1379e-06 270L96.6187 270Z" fill="#3F687B"/>
        <path d="M443.381 270C443.381 174.401 365.599 96.6187 270 96.6187L270 -2.98583e-06C418.878 -9.49351e-06 540 121.122 540 270L443.381 270Z" fill="#F05133"/>
        <path d="M270 96.6186C174.401 96.6187 96.6186 174.401 96.6186 270L0 270C-1.17884e-06 121.122 121.122 2.68299e-05 270 -9.0951e-06L270 96.6186V96.6186Z" fill="#5BBDEB"/>
      </svg>
  )
}


export default function BasicHero({content}) {
  const el = useRef()
  const [scrollTrigger, setScrollTrigger] = useState();

  useEffect(() => {
    gsap.registerPlugin(ScrollTrigger);
    setScrollTrigger({
      trigger: `${styles.component}`,
      start: "top",
      end: "bottom",
      scrub: true,
    });
  }, []);

  let replacedAlphabets;

  replacedAlphabets = reactStringReplace(`${content.title}`, "m", (match, i) => (
    <div key={match +i} style={{color:"#F05133"}}>M</div>
  ))
  replacedAlphabets = reactStringReplace(replacedAlphabets, ".", (match, i) => (
    <div key={match +i} style={{color:"#F05133"}}>.</div>
  ))
  replacedAlphabets = reactStringReplace(replacedAlphabets, "o", (match, i) => (
    <DecorO key={match +i} />
  ))
  


  if (!scrollTrigger) return false;

  return(
    <ScrollAnim>
      <div className={styles.component}  ref={el}>
        <div className={styles.wrapper}>
          <div className={styles.inner}>
            {/* <div className={styles.logo}>
              <ChronosLogo />
            </div> */}
            <div className={styles.heading}>
              {
                replacedAlphabets
              }
            </div>
            <RichText className={styles.richtext} html={content.desc}/>
          </div>
          <div className={styles.image_wrapper}>
            <Tween
              to={{
                y: '-200px',
                scrollTrigger,
                rotation: 180
              }}
              duration={1}
            >
              <div className={styles.image}>
                <BigO/>
              </div>
            </Tween>
          </div>          
        </div>
      </div>
    </ScrollAnim>
  );
}
